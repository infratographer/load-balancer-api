image:
  repository: ghcr.io/infratographer/load-balancer-api
  pullPolicy: IfNotPresent
  tag: "v0.1.3"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

service:
  type: ClusterIP
  port: 80
  sessionAffinity: None
  annotations: {}

ingress:
  enabled: false
  annotations: {}
  hosts: []
  tls: {}

api:
  replicas: 1
  listenPort: 7608
  extraLabels: {}
  extraAnnotations: {}
  extraEnvFrom: {}
  extraEnvVars: []
  #- value: "postgresql://user@my-db-server:26257/load_balancer_api"
  #  name: LOADBALANCERAPI_CRDB_URI
  resources: {}
  podSecurityContext: {}
  securityContext: {}
  events:
    nats:
      # url is the event server connection url
      url: "nats://my-events-cluster.example.com:4222"
      # publishPrefix is the subscribe event prefix
      publishPrefix: "com.infratographer"
      # queueGroup defines the events queue group
      queueGroup: ""
      # source defines the source of the events (defaults to application name)
      source: ""
      # connectTimeout is event connection timeout
      connectTimeout: "10s"
      # shutdownTimeout is the shutdown grace period
      shutdownTimeout: "5s"
      # tokenSecretName is the secret to load the auth token
      tokenSecretName: ""
      # credsSecretName is the secret to load the creds auth file from
      credsSecretName: ""
      # credsFile is the location to read the creds file from
      credsFile: "/nats/creds"
  db:
    uriSecret: ""
    certSecret: ""
  migrateOnInit: false

  metadata:
    # statusNamespaceID is the namespace ID to use for status updates
    statusNamespaceID: ""

  oidc:
    enabled: false
    audience: ""
    issuer: ""
    jwks:
      remoteTimeout: 1m
    client:
      issuer: ""

  permissions:
    url: ""
    # ignoreNoResponders whether or not to ignore errors when no AuthRelationship request-reply responders are available
    ignoreNoResponders: false

  shutdownGracePeriod: 5s

  supergraph:
    url: ""
    timeout: 5s

  trustedProxies: []
  # - "1.2.3.4"
  # - "1.2.3.4/32"
  # - "1.2.3.0/24"

  tracing:
    # enabled is true if OpenTelemetry tracing should be enabled for permissions-api
    enabled: false
    # environment is the OpenTelemetry tracing environment to use
    environment: ""
    # provider is the OpenTelemetry tracing provider to use
    provider: stdout
    jaeger:
      # endpoint is the Jaeger collector to send traces to
      endpoint: ""
      # user is the user to use when authenticating against the Jaeger deployment
      user: ""
      # password is the password to use when authenticating against the Jaeger deployment
      password: ""
    otlp:
      # endpoint is the OpenTelemetry Protocol (OTLP) collector endpoint to send traces to
      endpoint: ""
      # insecure is true if TLS should not be required when sending traces
      insecure: false

reloader:
  enabled: false
