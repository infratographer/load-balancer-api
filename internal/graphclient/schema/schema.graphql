directive @composeDirective(name: String!) repeatable on SCHEMA
directive @extends on OBJECT | INTERFACE
directive @external on OBJECT | FIELD_DEFINITION
directive @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION
directive @interfaceObject on OBJECT
directive @key(fields: FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE
directive @link(import: [String!], url: String!) repeatable on SCHEMA
directive @override(from: String!) on FIELD_DEFINITION
directive @prefixedID(prefix: String!) on OBJECT
directive @provides(fields: FieldSet!) on FIELD_DEFINITION
directive @requires(fields: FieldSet!) on FIELD_DEFINITION
directive @shareable repeatable on FIELD_DEFINITION | OBJECT
directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION
"""Input information to create a load balancer."""
input CreateLoadBalancerInput {
	createdBy: String
	updatedBy: String
	"""The name of the load balancer."""
	name: String!
	"""The ID for the owner for this load balancer."""
	ownerID: ID!
	"""The ID for the location of this load balancer."""
	locationID: ID!
	portIDs: [ID!]
	providerID: ID!
}
"""
CreateLoadBalancerOriginInput is used for create LoadBalancerOrigin object.
Input was generated by ent.
"""
input CreateLoadBalancerOriginInput {
	name: String!
	weight: Int
	target: String!
	portNumber: Int!
	active: Boolean
	poolID: ID!
}
"""
CreateLoadBalancerPoolInput is used for create LoadBalancerPool object.
Input was generated by ent.
"""
input CreateLoadBalancerPoolInput {
	name: String!
	protocol: LoadBalancerPoolProtocol!
	ownerID: ID!
	portIDs: [ID!]
	originIDs: [ID!]
}
"""
CreateLoadBalancerPortInput is used for create LoadBalancerPort object.
Input was generated by ent.
"""
input CreateLoadBalancerPortInput {
	number: Int!
	name: String!
	poolIDs: [ID!]
	loadBalancerID: ID!
}
"""Input information to create a load balancer provider."""
input CreateLoadBalancerProviderInput {
	"""The name of the load balancer provider."""
	name: String!
	"""The ID for the owner for this load balancer."""
	ownerID: ID!
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
scalar FieldSet
interface IPAddressable {
	id: ID!
}
"""A valid JSON string."""
scalar JSON
type LoadBalancer implements Node & IPAddressable & MetadataNode @key(fields: "id") @prefixedID(prefix: "loadbal") {
	"""The ID for the load balancer."""
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	createdBy: String
	updatedBy: String
	"""The name of the load balancer."""
	name: String!
	ports(
		"""Returns the elements in the list that come after the specified cursor."""
		after: Cursor

		"""Returns the first _n_ elements from the list."""
		first: Int

		"""Returns the elements in the list that come before the specified cursor."""
		before: Cursor

		"""Returns the last _n_ elements from the list."""
		last: Int

		"""Ordering options for LoadBalancerPorts returned from the connection."""
		orderBy: LoadBalancerPortOrder

		"""Filtering options for LoadBalancerPorts returned from the connection."""
		where: LoadBalancerPortWhereInput
	): LoadBalancerPortConnection!
	"""The load balancer provider for the load balancer."""
	loadBalancerProvider: LoadBalancerProvider!
	"""The location of the load balancer."""
	location: Location!
	"""The owner of the load balancer."""
	owner: ResourceOwner!
}
"""A connection to a list of items."""
type LoadBalancerConnection {
	"""A list of edges."""
	edges: [LoadBalancerEdge]
	"""Information to aid in pagination."""
	pageInfo: PageInfo!
	"""Identifies the total count of items in the connection."""
	totalCount: Int!
}
"""Return response from loadBalancerCreate"""
type LoadBalancerCreatePayload {
	"""The created load balancer."""
	loadBalancer: LoadBalancer!
}
"""Return response from loadBalancerDelete"""
type LoadBalancerDeletePayload {
	"""The ID of the deleted load balancer."""
	deletedID: ID!
}
"""An edge in a connection."""
type LoadBalancerEdge {
	"""The item at the end of the edge."""
	node: LoadBalancer
	"""A cursor for use in pagination."""
	cursor: Cursor!
}
"""Ordering options for LoadBalancer connections"""
input LoadBalancerOrder {
	"""The ordering direction."""
	direction: OrderDirection! = ASC
	"""The field by which to order LoadBalancers."""
	field: LoadBalancerOrderField!
}
"""Properties by which LoadBalancer connections can be ordered."""
enum LoadBalancerOrderField {
	ID
	CREATED_AT
	UPDATED_AT
	NAME
	OWNER
}
type LoadBalancerOrigin implements Node @key(fields: "id") @prefixedID(prefix: "loadogn") {
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	name: String!
	weight: Int!
	target: String!
	portNumber: Int!
	active: Boolean!
	poolID: ID!
	pool: LoadBalancerPool!
}
"""A connection to a list of items."""
type LoadBalancerOriginConnection {
	"""A list of edges."""
	edges: [LoadBalancerOriginEdge]
	"""Information to aid in pagination."""
	pageInfo: PageInfo!
	"""Identifies the total count of items in the connection."""
	totalCount: Int!
}
"""Return response from loadBalancerOriginCreate"""
type LoadBalancerOriginCreatePayload {
	"""The created pool origin."""
	loadBalancerOrigin: LoadBalancerOrigin!
}
"""Return response from loadBalancerOriginDelete"""
type LoadBalancerOriginDeletePayload {
	"""The deleted pool origin."""
	deletedID: ID!
}
"""An edge in a connection."""
type LoadBalancerOriginEdge {
	"""The item at the end of the edge."""
	node: LoadBalancerOrigin
	"""A cursor for use in pagination."""
	cursor: Cursor!
}
"""Ordering options for LoadBalancerOrigin connections"""
input LoadBalancerOriginOrder {
	"""The ordering direction."""
	direction: OrderDirection! = ASC
	"""The field by which to order LoadBalancerOrigins."""
	field: LoadBalancerOriginOrderField!
}
"""Properties by which LoadBalancerOrigin connections can be ordered."""
enum LoadBalancerOriginOrderField {
	CREATED_AT
	UPDATED_AT
	name
	weight
	target
	number
	active
}
"""Return response from loadBalancerOriginUpdate"""
type LoadBalancerOriginUpdatePayload {
	"""The updated pool origin."""
	loadBalancerOrigin: LoadBalancerOrigin!
}
"""
LoadBalancerOriginWhereInput is used for filtering Origin objects.
Input was generated by ent.
"""
input LoadBalancerOriginWhereInput {
	not: LoadBalancerOriginWhereInput
	and: [LoadBalancerOriginWhereInput!]
	or: [LoadBalancerOriginWhereInput!]
	"""id field predicates"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	"""created_at field predicates"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	"""updated_at field predicates"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	"""name field predicates"""
	name: String
	nameNEQ: String
	nameIn: [String!]
	nameNotIn: [String!]
	nameGT: String
	nameGTE: String
	nameLT: String
	nameLTE: String
	nameContains: String
	nameHasPrefix: String
	nameHasSuffix: String
	nameEqualFold: String
	nameContainsFold: String
	"""weight field predicates"""
	weight: Int
	weightNEQ: Int
	weightIn: [Int!]
	weightNotIn: [Int!]
	weightGT: Int
	weightGTE: Int
	weightLT: Int
	weightLTE: Int
	"""target field predicates"""
	target: String
	targetNEQ: String
	targetIn: [String!]
	targetNotIn: [String!]
	targetGT: String
	targetGTE: String
	targetLT: String
	targetLTE: String
	targetContains: String
	targetHasPrefix: String
	targetHasSuffix: String
	targetEqualFold: String
	targetContainsFold: String
	"""port_number field predicates"""
	portNumber: Int
	portNumberNEQ: Int
	portNumberIn: [Int!]
	portNumberNotIn: [Int!]
	portNumberGT: Int
	portNumberGTE: Int
	portNumberLT: Int
	portNumberLTE: Int
	"""active field predicates"""
	active: Boolean
	activeNEQ: Boolean
	"""pool edge predicates"""
	hasPool: Boolean
	hasPoolWith: [LoadBalancerPoolWhereInput!]
}
type LoadBalancerPool implements Node @key(fields: "id") @prefixedID(prefix: "loadpol") {
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	name: String!
	protocol: LoadBalancerPoolProtocol!
	ownerID: ID!
	ports: [LoadBalancerPort!]
	origins(
		"""Returns the elements in the list that come after the specified cursor."""
		after: Cursor

		"""Returns the first _n_ elements from the list."""
		first: Int

		"""Returns the elements in the list that come before the specified cursor."""
		before: Cursor

		"""Returns the last _n_ elements from the list."""
		last: Int

		"""Ordering options for LoadBalancerOrigins returned from the connection."""
		orderBy: LoadBalancerOriginOrder

		"""Filtering options for LoadBalancerOrigins returned from the connection."""
		where: LoadBalancerOriginWhereInput
	): LoadBalancerOriginConnection!
	"""The owner of the load balancer pool."""
	owner: ResourceOwner!
}
"""A connection to a list of items."""
type LoadBalancerPoolConnection {
	"""A list of edges."""
	edges: [LoadBalancerPoolEdge]
	"""Information to aid in pagination."""
	pageInfo: PageInfo!
	"""Identifies the total count of items in the connection."""
	totalCount: Int!
}
"""Return response from LoadBalancerPoolCreate"""
type LoadBalancerPoolCreatePayload {
	"""The created pool."""
	loadBalancerPool: LoadBalancerPool!
}
"""Return response from LoadBalancerPoolDelete"""
type LoadBalancerPoolDeletePayload {
	"""The ID of the deleted pool."""
	deletedID: ID
}
"""An edge in a connection."""
type LoadBalancerPoolEdge {
	"""The item at the end of the edge."""
	node: LoadBalancerPool
	"""A cursor for use in pagination."""
	cursor: Cursor!
}
"""Ordering options for LoadBalancerPool connections"""
input LoadBalancerPoolOrder {
	"""The ordering direction."""
	direction: OrderDirection! = ASC
	"""The field by which to order LoadBalancerPools."""
	field: LoadBalancerPoolOrderField!
}
"""Properties by which LoadBalancerPool connections can be ordered."""
enum LoadBalancerPoolOrderField {
	CREATED_AT
	UPDATED_AT
	name
	protocol
}
"""LoadBalancerPoolProtocol is enum for the field protocol"""
enum LoadBalancerPoolProtocol {
	tcp
	udp
}
"""Return response from LoadBalancerPoolUpdate"""
type LoadBalancerPoolUpdatePayload {
	"""The updated pool."""
	loadBalancerPool: LoadBalancerPool!
}
"""
LoadBalancerPoolWhereInput is used for filtering Pool objects.
Input was generated by ent.
"""
input LoadBalancerPoolWhereInput {
	not: LoadBalancerPoolWhereInput
	and: [LoadBalancerPoolWhereInput!]
	or: [LoadBalancerPoolWhereInput!]
	"""id field predicates"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	"""created_at field predicates"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	"""updated_at field predicates"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	"""name field predicates"""
	name: String
	nameNEQ: String
	nameIn: [String!]
	nameNotIn: [String!]
	nameGT: String
	nameGTE: String
	nameLT: String
	nameLTE: String
	nameContains: String
	nameHasPrefix: String
	nameHasSuffix: String
	nameEqualFold: String
	nameContainsFold: String
	"""protocol field predicates"""
	protocol: LoadBalancerPoolProtocol
	protocolNEQ: LoadBalancerPoolProtocol
	protocolIn: [LoadBalancerPoolProtocol!]
	protocolNotIn: [LoadBalancerPoolProtocol!]
	"""ports edge predicates"""
	hasPorts: Boolean
	hasPortsWith: [LoadBalancerPortWhereInput!]
	"""origins edge predicates"""
	hasOrigins: Boolean
	hasOriginsWith: [LoadBalancerOriginWhereInput!]
}
type LoadBalancerPort implements Node @key(fields: "id") @prefixedID(prefix: "loadprt") {
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	number: Int!
	name: String!
	loadBalancerID: ID!
	pools: [LoadBalancerPool!]
	loadBalancer: LoadBalancer!
}
"""A connection to a list of items."""
type LoadBalancerPortConnection {
	"""A list of edges."""
	edges: [LoadBalancerPortEdge]
	"""Information to aid in pagination."""
	pageInfo: PageInfo!
	"""Identifies the total count of items in the connection."""
	totalCount: Int!
}
"""Return response from loadBalancerPortCreate"""
type LoadBalancerPortCreatePayload {
	"""The created load balancer port."""
	loadBalancerPort: LoadBalancerPort!
}
"""Return response from loadBalancerPortDelete"""
type LoadBalancerPortDeletePayload {
	"""The ID of the deleted load balancer port."""
	deletedID: ID!
}
"""An edge in a connection."""
type LoadBalancerPortEdge {
	"""The item at the end of the edge."""
	node: LoadBalancerPort
	"""A cursor for use in pagination."""
	cursor: Cursor!
}
"""Ordering options for LoadBalancerPort connections"""
input LoadBalancerPortOrder {
	"""The ordering direction."""
	direction: OrderDirection! = ASC
	"""The field by which to order LoadBalancerPorts."""
	field: LoadBalancerPortOrderField!
}
"""Properties by which LoadBalancerPort connections can be ordered."""
enum LoadBalancerPortOrderField {
	CREATED_AT
	UPDATED_AT
	number
	name
}
"""Return response from loadBalancerPortUpdate"""
type LoadBalancerPortUpdatePayload {
	"""The updated load balancer port."""
	loadBalancerPort: LoadBalancerPort!
}
"""
LoadBalancerPortWhereInput is used for filtering Port objects.
Input was generated by ent.
"""
input LoadBalancerPortWhereInput {
	not: LoadBalancerPortWhereInput
	and: [LoadBalancerPortWhereInput!]
	or: [LoadBalancerPortWhereInput!]
	"""id field predicates"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	"""created_at field predicates"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	"""updated_at field predicates"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	"""number field predicates"""
	number: Int
	numberNEQ: Int
	numberIn: [Int!]
	numberNotIn: [Int!]
	numberGT: Int
	numberGTE: Int
	numberLT: Int
	numberLTE: Int
	"""name field predicates"""
	name: String
	nameNEQ: String
	nameIn: [String!]
	nameNotIn: [String!]
	nameGT: String
	nameGTE: String
	nameLT: String
	nameLTE: String
	nameContains: String
	nameHasPrefix: String
	nameHasSuffix: String
	nameEqualFold: String
	nameContainsFold: String
	"""pools edge predicates"""
	hasPools: Boolean
	hasPoolsWith: [LoadBalancerPoolWhereInput!]
	"""load_balancer edge predicates"""
	hasLoadBalancer: Boolean
	hasLoadBalancerWith: [LoadBalancerWhereInput!]
}
type LoadBalancerProvider implements Node @key(fields: "id") @prefixedID(prefix: "loadpvd") {
	"""The ID for the load balancer provider."""
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	"""The name of the load balancer provider."""
	name: String!
	loadBalancers(
		"""Returns the elements in the list that come after the specified cursor."""
		after: Cursor

		"""Returns the first _n_ elements from the list."""
		first: Int

		"""Returns the elements in the list that come before the specified cursor."""
		before: Cursor

		"""Returns the last _n_ elements from the list."""
		last: Int

		"""Ordering options for LoadBalancers returned from the connection."""
		orderBy: LoadBalancerOrder

		"""Filtering options for LoadBalancers returned from the connection."""
		where: LoadBalancerWhereInput
	): LoadBalancerConnection!
	"""The owner of the load balancer provider."""
	owner: ResourceOwner!
}
"""A connection to a list of items."""
type LoadBalancerProviderConnection {
	"""A list of edges."""
	edges: [LoadBalancerProviderEdge]
	"""Information to aid in pagination."""
	pageInfo: PageInfo!
	"""Identifies the total count of items in the connection."""
	totalCount: Int!
}
"""Return response from loadBalancerProviderCreate"""
type LoadBalancerProviderCreatePayload {
	"""The created load balancer provider."""
	loadBalancerProvider: LoadBalancerProvider!
}
"""Return response from loadBalancerProviderDelete"""
type LoadBalancerProviderDeletePayload {
	"""The ID of the deleted load balancer provider."""
	deletedID: ID!
}
"""An edge in a connection."""
type LoadBalancerProviderEdge {
	"""The item at the end of the edge."""
	node: LoadBalancerProvider
	"""A cursor for use in pagination."""
	cursor: Cursor!
}
"""Ordering options for LoadBalancerProvider connections"""
input LoadBalancerProviderOrder {
	"""The ordering direction."""
	direction: OrderDirection! = ASC
	"""The field by which to order LoadBalancerProviders."""
	field: LoadBalancerProviderOrderField!
}
"""Properties by which LoadBalancerProvider connections can be ordered."""
enum LoadBalancerProviderOrderField {
	ID
	CREATED_AT
	UPDATED_AT
	NAME
	OWNER
}
"""Return response from loadBalancerProviderUpdate"""
type LoadBalancerProviderUpdatePayload {
	"""The updated load balancer provider."""
	loadBalancerProvider: LoadBalancerProvider!
}
"""
LoadBalancerProviderWhereInput is used for filtering Provider objects.
Input was generated by ent.
"""
input LoadBalancerProviderWhereInput {
	not: LoadBalancerProviderWhereInput
	and: [LoadBalancerProviderWhereInput!]
	or: [LoadBalancerProviderWhereInput!]
	"""id field predicates"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	"""created_at field predicates"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	"""updated_at field predicates"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	"""name field predicates"""
	name: String
	nameNEQ: String
	nameIn: [String!]
	nameNotIn: [String!]
	nameGT: String
	nameGTE: String
	nameLT: String
	nameLTE: String
	nameContains: String
	nameHasPrefix: String
	nameHasSuffix: String
	nameEqualFold: String
	nameContainsFold: String
	"""load_balancers edge predicates"""
	hasLoadBalancers: Boolean
	hasLoadBalancersWith: [LoadBalancerWhereInput!]
}
"""Return response from loadBalancerUpdate"""
type LoadBalancerUpdatePayload {
	"""The updated load balancer."""
	loadBalancer: LoadBalancer!
}
"""
LoadBalancerWhereInput is used for filtering LoadBalancer objects.
Input was generated by ent.
"""
input LoadBalancerWhereInput {
	not: LoadBalancerWhereInput
	and: [LoadBalancerWhereInput!]
	or: [LoadBalancerWhereInput!]
	"""id field predicates"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	"""created_at field predicates"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	"""updated_at field predicates"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	"""created_by field predicates"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""updated_by field predicates"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""name field predicates"""
	name: String
	nameNEQ: String
	nameIn: [String!]
	nameNotIn: [String!]
	nameGT: String
	nameGTE: String
	nameLT: String
	nameLTE: String
	nameContains: String
	nameHasPrefix: String
	nameHasSuffix: String
	nameEqualFold: String
	nameContainsFold: String
	"""ports edge predicates"""
	hasPorts: Boolean
	hasPortsWith: [LoadBalancerPortWhereInput!]
	"""provider edge predicates"""
	hasProvider: Boolean
	hasProviderWith: [LoadBalancerProviderWhereInput!]
}
type Location @key(fields: "id") {
	id: ID!
	loadBalancers(
		"""Returns the elements in the list that come after the specified cursor."""
		after: Cursor

		"""Returns the first _n_ elements from the list."""
		first: Int

		"""Returns the elements in the list that come before the specified cursor."""
		before: Cursor

		"""Returns the last _n_ elements from the list."""
		last: Int

		"""Ordering options for LoadBalancers returned from the connection."""
		orderBy: LoadBalancerOrder

		"""Filtering options for LoadBalancers returned from the connection."""
		where: LoadBalancerWhereInput
	): LoadBalancerConnection!
}
interface MetadataNode {
	id: ID!
}
type Mutation {
	"""Create a loadbalancer pool origin"""
	loadBalancerOriginCreate(input: CreateLoadBalancerOriginInput!): LoadBalancerOriginCreatePayload!
	"""Update a loadbalancer pool origin"""
	loadBalancerOriginUpdate(id: ID!, input: UpdateLoadBalancerOriginInput!): LoadBalancerOriginUpdatePayload!
	"""Delete a loadbalancer pool origin"""
	loadBalancerOriginDelete(id: ID!): LoadBalancerOriginDeletePayload!
	"""Create a load balancer."""
	loadBalancerCreate(input: CreateLoadBalancerInput!): LoadBalancerCreatePayload!
	"""Update a load balancer."""
	loadBalancerUpdate(id: ID!, input: UpdateLoadBalancerInput!): LoadBalancerUpdatePayload!
	"""Delete a load balancer."""
	loadBalancerDelete(id: ID!): LoadBalancerDeletePayload!
	"""Create a pool."""
	loadBalancerPoolCreate(input: CreateLoadBalancerPoolInput!): LoadBalancerPoolCreatePayload!
	"""Update a pool."""
	loadBalancerPoolUpdate(id: ID!, input: UpdateLoadBalancerPoolInput!): LoadBalancerPoolUpdatePayload!
	"""Delete a pool."""
	loadBalancerPoolDelete(id: ID!): LoadBalancerPoolDeletePayload!
	"""Create a load balancer port."""
	loadBalancerPortCreate(input: CreateLoadBalancerPortInput!): LoadBalancerPortCreatePayload!
	"""Update a load balancer port."""
	loadBalancerPortUpdate(id: ID!, input: UpdateLoadBalancerPortInput!): LoadBalancerPortUpdatePayload!
	"""Delete a load balancer port"""
	loadBalancerPortDelete(id: ID!): LoadBalancerPortDeletePayload!
	"""Create a load balancer provider."""
	loadBalancerProviderCreate(input: CreateLoadBalancerProviderInput!): LoadBalancerProviderCreatePayload!
	"""Update a load balancer provider."""
	loadBalancerProviderUpdate(id: ID!, input: UpdateLoadBalancerProviderInput!): LoadBalancerProviderUpdatePayload!
	"""Delete a load balancer provider."""
	loadBalancerProviderDelete(id: ID!): LoadBalancerProviderDeletePayload!
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node {
	"""The id of the object."""
	id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
	"""Specifies an ascending order for a given `orderBy` argument."""
	ASC
	"""Specifies a descending order for a given `orderBy` argument."""
	DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo @shareable {
	"""When paginating forwards, are there more items?"""
	hasNextPage: Boolean!
	"""When paginating backwards, are there more items?"""
	hasPreviousPage: Boolean!
	"""When paginating backwards, the cursor to continue."""
	startCursor: Cursor
	"""When paginating forwards, the cursor to continue."""
	endCursor: Cursor
}
type Query {
	loadBalancerPools(
		"""Returns the elements in the list that come after the specified cursor."""
		after: Cursor

		"""Returns the first _n_ elements from the list."""
		first: Int

		"""Returns the elements in the list that come before the specified cursor."""
		before: Cursor

		"""Returns the last _n_ elements from the list."""
		last: Int

		"""Ordering options for LoadBalancerPools returned from the connection."""
		orderBy: LoadBalancerPoolOrder

		"""Filtering options for LoadBalancerPools returned from the connection."""
		where: LoadBalancerPoolWhereInput
	): LoadBalancerPoolConnection!
	"""Lookup a load balancer by ID."""
	loadBalancer(
		"""The load balancer ID."""
		id: ID!
	): LoadBalancer!
	"""Lookup a pool by ID."""
	loadBalancerPool(
		"""The pool ID."""
		id: ID!
	): LoadBalancerPool!
	"""Lookup a load balancer provider by ID."""
	loadBalancerProvider(
		"""The load balancer provider ID."""
		id: ID!
	): LoadBalancerProvider!
	_entities(representations: [_Any!]!): [_Entity]!
	_service: _Service!
}
type ResourceOwner @interfaceObject @key(fields: "id") {
	id: ID!
	loadBalancers(
		"""Returns the elements in the list that come after the specified cursor."""
		after: Cursor

		"""Returns the first _n_ elements from the list."""
		first: Int

		"""Returns the elements in the list that come before the specified cursor."""
		before: Cursor

		"""Returns the last _n_ elements from the list."""
		last: Int

		"""Ordering options for LoadBalancers returned from the connection."""
		orderBy: LoadBalancerOrder

		"""Filtering options for LoadBalancers returned from the connection."""
		where: LoadBalancerWhereInput
	): LoadBalancerConnection!
	loadBalancerPools(
		"""Returns the elements in the list that come after the specified cursor."""
		after: Cursor

		"""Returns the first _n_ elements from the list."""
		first: Int

		"""Returns the elements in the list that come before the specified cursor."""
		before: Cursor

		"""Returns the last _n_ elements from the list."""
		last: Int

		"""Ordering options for LoadBalancerPools returned from the connection."""
		orderBy: LoadBalancerPoolOrder

		"""Filtering options for LoadBalancerPools returned from the connection."""
		where: LoadBalancerPoolWhereInput
	): LoadBalancerPoolConnection!
	loadBalancersProviders(
		"""Returns the elements in the list that come after the specified cursor."""
		after: Cursor

		"""Returns the first _n_ elements from the list."""
		first: Int

		"""Returns the elements in the list that come before the specified cursor."""
		before: Cursor

		"""Returns the last _n_ elements from the list."""
		last: Int

		"""Ordering options for LoadBalancerProviders returned from the connection."""
		orderBy: LoadBalancerOrder

		"""Filtering options for LoadBalancerProviders returned from the connection."""
		where: LoadBalancerProviderWhereInput
	): LoadBalancerProviderConnection!
}
"""The builtin Time type"""
scalar Time
"""Input information to update a load balancer."""
input UpdateLoadBalancerInput {
	updatedBy: String
	clearUpdatedBy: Boolean
	"""The name of the load balancer."""
	name: String
	addPortIDs: [ID!]
	removePortIDs: [ID!]
	clearPorts: Boolean
}
"""
UpdateLoadBalancerOriginInput is used for update LoadBalancerOrigin object.
Input was generated by ent.
"""
input UpdateLoadBalancerOriginInput {
	name: String
	weight: Int
	target: String
	portNumber: Int
	active: Boolean
}
"""
UpdateLoadBalancerPoolInput is used for update LoadBalancerPool object.
Input was generated by ent.
"""
input UpdateLoadBalancerPoolInput {
	name: String
	protocol: LoadBalancerPoolProtocol
	addPortIDs: [ID!]
	removePortIDs: [ID!]
	clearPorts: Boolean
	addOriginIDs: [ID!]
	removeOriginIDs: [ID!]
	clearOrigins: Boolean
}
"""
UpdateLoadBalancerPortInput is used for update LoadBalancerPort object.
Input was generated by ent.
"""
input UpdateLoadBalancerPortInput {
	number: Int
	name: String
	addPoolIDs: [ID!]
	removePoolIDs: [ID!]
	clearPools: Boolean
}
"""Input information to update a load balancer provider."""
input UpdateLoadBalancerProviderInput {
	"""The name of the load balancer provider."""
	name: String
}
scalar _Any
union _Entity = LoadBalancer | LoadBalancerOrigin | LoadBalancerPool | LoadBalancerPort | LoadBalancerProvider | Location | ResourceOwner
type _Service {
	sdl: String
}
